import java.io.*;
import java.util.*;


public class P2644 {

	public static void main(String[] args) throws IOException {
		BufferedReader  br = new BufferedReader(new InputStreamReader(System.in));
		int N = Integer.parseInt(br.readLine());
		
		int[][] map = new int[N+1][N+1];
		boolean[] visited = new boolean[N+1];
		
		StringTokenizer st = new StringTokenizer(br.readLine());
		
		int me = Integer.parseInt(st.nextToken());
		int you = Integer.parseInt(st.nextToken());
		
		
		int num = Integer.parseInt(br.readLine());
		
		for(int i=0;i<num;i++) {
			st = new StringTokenizer(br.readLine());
			int a = Integer.parseInt(st.nextToken());
			int b = Integer.parseInt(st.nextToken());
			
			map[a][b]=1;
			map[b][a]=1;
		}
		
		
		Queue<Integer>queue = new LinkedList<>();
		
		queue.add(me);
		visited[me]=true;
		
		
		int cnt =0;
		boolean find = false;
		while(!queue.isEmpty()) {
			int size = queue.size();
			
			for(int s=0;s<size;s++) {
				int now = queue.poll();
				
				for(int q=1;q<=N;q++) {
					if(visited[q]==true)continue;
					if(map[now][q]==1) {
						queue.add(q);
						visited[q]=true;
						if(q==you) {
							find=true;
						}
					}
					
					
				}
				
				
			}
			
			cnt++;
			if(find)break;
		}
		
		System.out.println(find ? cnt : -1);
		
		

	}

}
