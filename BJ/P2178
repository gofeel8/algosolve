import java.util.*;
import java.io.*;

public class P2178 {
	public static int[][] map;
	public static boolean[][] visited;
	public static int[] dr = {-1,0,1,0};
	public static int[] dc = {0,1,0,-1};
	

	public static void main(String[] args) throws IOException {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		
		StringTokenizer st = new StringTokenizer(br.readLine());
		
		int N = Integer.parseInt(st.nextToken());
		int M = Integer.parseInt(st.nextToken());
		
		map = new int[N][M];
		visited =  new boolean[N][M];
		
		for(int i=0;i<N;i++) {
			String str = br.readLine();
			for(int j=0;j<M;j++) {
				map[i][j]=str.charAt(j)-'0';
			}
		}
		
		Queue<Node> queue = new LinkedList<>();
		queue.add(new Node(0,0,1));
		visited[0][0]=true;
		
		int result=0;
		while(!queue.isEmpty()) {
			Node now = queue.poll();
			
			for(int d=0;d<4;d++) {
				int nr = now.row+dr[d];
				int nc = now.col+dc[d];
				if(nr<0 || nr>=N || nc<0 || nc>=M)continue;
				if(visited[nr][nc]==true)continue;
				
				if(map[nr][nc]==1) {
					queue.add(new Node(nr,nc,now.cnt+1));
					visited[nr][nc]=true;
					if(nr==N-1 &&nc==M-1) {
						//유레카
						result = now.cnt+1;
						break;
					}
				}
				
				
			}
			
			if(result !=0) {
				break;
			}
		}
		
		System.out.println(result);
		
		
		
	}
	
	public static class Node{
		int row;
		int col;
		int cnt;
		
		Node(int r,int c,int cnt){
			row =r;
			col =c;
			this.cnt=cnt;
		}
	}

}
